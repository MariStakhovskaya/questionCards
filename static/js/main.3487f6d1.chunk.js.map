{"version":3,"sources":["App.module.css","common/Error404/Error404.module.css","common/Header/Header.module.css","common/assets/cpLogo.png","common/Preloader/Ellipsis.gif","common/assets/404.png","common/assets/4698238.png","common/Logo.tsx","common/Header/Header.tsx","api/cards-api.ts","features/Profile/profile-reducer.ts","features/Login/login-reducer.ts","app/app-reducer.ts","common/Preloader/Preloader.tsx","common/EditableSpan.tsx","features/Profile/Profile.tsx","features/Login/Login.tsx","features/Registration/regist-reducer.ts","features/Registration/Registration.tsx","features/ResetPassword/reset-reducer.ts","features/ResetPassword/Reset.tsx","common/Error404/Page404.tsx","features/ForgotPassword/forgotPassword-reducer.ts","features/ForgotPassword/ForgotPassword.tsx","app/Routes/AllRoutes.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx"],"names":["module","exports","mainBlock","formBlock","titleFormBlock","formBlockInput","footerBlock","defaultButton","defaultInput","labelInput","loader","error","checkEmail","logo","wrapper","image","errorText","back","headerContainer","headerMenu","__webpack_require__","p","Logo","react_default","a","createElement","className","style","src","alt","Header","common_Logo","react_router_dom","to","instance","axios","create","baseURL","withCredentials","authAPI","data","post","Object","objectSpread","delete","email","password","name","avatar","put","from","message","resetPasswordToken","initialState","userData","_id","publicCardPacksCount","isAdmin","verified","rememberMe","setUserDataAC","type","payload","isLoggedIn","isLoggedInAC","isError","loginTC","dispatch","setStatusAC","then","res","console","log","catch","err","response","isInitialized","status","setIsInitializedAC","initializeAppTC","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","t0","stop","_x","apply","this","arguments","Preloader","preloader","EditableSpan","React","memo","props","_useState","useState","_useState2","slicedToArray","editMode","setEditMode","_useState3","value","_useState4","title","setTitle","onChange","e","currentTarget","autoFocus","onBlur","onDoubleClick","Profile","useEffect","userName","useSelector","state","profile","userAvatar","login","app","setName","setAvatar","useDispatch","Preloader_Preloader","onClick","updatedUser","updateUserDateTC","react_router","Login","setEmail","setPassword","_useState5","_useState6","setRememberMe","event","checked","footerFormBlock","registrationTC","addedUser","Registration","password1","setPassword1","placeholder","isSendPassword","createNewPasswordTC","token","Reset","reset","useParams","Error404","image404","isSendInstruction","forgotPasswordTC","ForgotPassword","isSendInstructionAC","forgot","logoEmail","AllRoutes","path","element","Profile_Profile","Login_Login","Registration_Registration","ForgotPassword_ForgotPassword","ResetPassword_Reset","Page404","App","Header_Header","AllRoutes_AllRoutes","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","length","undefined","action","store","createStore","applyMiddleware","thunk","window","ReactDOM","createRoot","document","getElementById","render","es","src_App"],"mappings":"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","file":"static/js/main.3487f6d1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBlock\":\"App_mainBlock__2HF24\",\"formBlock\":\"App_formBlock__1zaAh\",\"titleFormBlock\":\"App_titleFormBlock__3ZC75\",\"formBlockInput\":\"App_formBlockInput__2Z6wr\",\"footerBlock\":\"App_footerBlock__1vnFk\",\"defaultButton\":\"App_defaultButton__12b8P\",\"defaultInput\":\"App_defaultInput__2Pgcg\",\"labelInput\":\"App_labelInput__2orqK\",\"loader\":\"App_loader__2oKrW\",\"error\":\"App_error__28HgU\",\"checkEmail\":\"App_checkEmail__3xmvW\",\"logo\":\"App_logo__2UF9l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Error404_wrapper__6QRdJ\",\"image\":\"Error404_image__1tgfK\",\"errorText\":\"Error404_errorText__DB3_j\",\"back\":\"Error404_back__MQN98\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Header_headerContainer__1Ta32\",\"headerMenu\":\"Header_headerMenu__2eVCJ\"};","module.exports = __webpack_public_path__ + \"static/media/cpLogo.4d8df5a9.png\";","module.exports = __webpack_public_path__ + \"static/media/Ellipsis.6cf03e7b.gif\";","module.exports = __webpack_public_path__ + \"static/media/404.1340f194.png\";","module.exports = __webpack_public_path__ + \"static/media/4698238.068caec9.png\";","import React from 'react';\r\nimport logo from './assets/cpLogo.png'\r\nimport style from '../App.module.css'\r\n\r\n\r\n\r\nfunction Logo() {\r\n\r\n    return (\r\n        <div className=\"logo\">\r\n            <img className={style.logo} src={logo} alt=\"logo pet project\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;\r\n\r\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport style from './Header.module.css'\r\nimport Logo from \"../Logo\";\r\n\r\nfunction Header() {\r\n\r\n    return (\r\n        <div className={style.headerContainer}>\r\n            <Logo/>\r\n            <nav className={style.headerMenu}>\r\n\r\n                <Link to={\"/login\"}>Login</Link>\r\n                <Link to={\"/profile\"}>Profile</Link>\r\n                <Link to={\"/registration\"}>Registration</Link>\r\n                <Link to={\"/forgot\"}>ForgotPassword</Link>\r\n                {/*<Link to={\"/reset\"}>Reset</Link>*/}\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n\r\n","import axios from \"axios\";\r\n\r\n\r\nexport const instance = axios.create({\r\n    baseURL:'https://neko-back.herokuapp.com/2.0/',\r\n      /*  baseURL: process.env.REACT_APP_BACK_URL || 'http://localhost:7542/2.0/',*/\r\n        withCredentials: true,\r\n    })\r\n\r\n// baseURL: 'https://neko-back.herokuapp.com/2.0/'\r\n//http://localhost:7542/2.0/\r\n\r\n\r\n// api\r\nexport const authAPI = {\r\n    login(data: LoginParamsType) {\r\n      return instance.post<LoginResponseType>('/auth/login', {...data})\r\n    },\r\n    authMe(){\r\n        return instance.post<{data:LoginResponseType}>('/auth/me',{})\r\n    },\r\n    logout(){\r\n        return instance.delete('auth/me')\r\n    },\r\n    registration(email: string, password: string){\r\n        return instance.post('auth/register', {email, password})\r\n    },\r\n    updateUserData(name:string, avatar: string) {\r\n        return instance.put('auth/me', {name,avatar })\r\n    },\r\n    forgotPassword(email: string) {\r\n            return instance.post<ForgotDataType>('/auth/forgot', {\r\n            email, from: '<maryia.jegorova@gmail.com>',\r\n                message: `<div style=\"background-color: #d0eca1; padding: 20px; border-radius: 15px\">This is a password recovery link: <a href='https://MariStakhovskaya.github.io/questionCards/#/reset/$token$'>link</a></div>`\r\n        })\r\n    },\r\n    createNewPassword(password: string, resetPasswordToken: string){\r\n        return instance.post('/auth/set-new-password',{password, resetPasswordToken})\r\n    }\r\n}\r\n\r\n\r\n// types\r\n\r\nexport type ForgotDataType = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n}\r\nexport type LoginParamsType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe?: boolean,\r\n}\r\n\r\nexport type LoginResponseType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar: string;\r\n    publicCardPacksCount: number; // количество колод\r\n    created: string;\r\n    updated: string;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n    error: string;\r\n\r\n}","import {Dispatch} from \"redux\";\r\nimport {authAPI, LoginResponseType} from \"../../api/cards-api\";\r\nimport {setStatusAC, SetStatusACType} from \"../../app/app-reducer\";\r\nimport {AppActionsType} from \"../../redux/store\";\r\n\r\nconst initialState = {\r\n    userData: {\r\n    _id: '',\r\n    email: '',\r\n    name: '',\r\n    avatar: '',\r\n    publicCardPacksCount: 0, // количество колод\r\n    isAdmin: false,\r\n    verified: false, // подтвердил ли почту\r\n    rememberMe: false,\r\n    error: ''}\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    debugger\r\n    switch (action.type) {\r\n        case \"login/SET_USER\":\r\n            return {...state,\r\n        ... action.payload\r\n            }\r\n        case \"UPDATE-USER-DATA\":\r\n            return {...state,\r\n                userData:{...state.userData,\r\n                    ...action.payload}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n// actions\r\n\r\nexport const setUserDataAC = (userData: LoginResponseType) => ({\r\n    type: 'login/SET_USER',\r\n    payload: {userData}\r\n} as const)\r\n\r\nexport const updateUserDateAC = (name: string, avatar: string) => ({\r\n    type: 'UPDATE-USER-DATA',\r\n    payload: {name,avatar}\r\n} as const)\r\n\r\n\r\n// thunk\r\n\r\nexport const updateUserDateTC = (name:string, avatar: string) => (dispatch: Dispatch<AppActionsType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    authAPI.updateUserData(name, avatar)\r\n        .then((res)=>{\r\n            console.log(res.data.updatedUser)\r\n            dispatch(updateUserDateAC(res.data.updatedUser.name, res.data.updatedUser.avatar))\r\n            dispatch(setStatusAC('succeeded'))\r\n        })\r\n}\r\n\r\n\r\n//type\r\nexport type ProfileActionTypes = UpdateUserDataType  | SetUserDataType\r\n\r\nexport type UpdateUserDataType = ReturnType<typeof updateUserDateAC>\r\nexport type SetUserDataType = ReturnType<typeof setUserDataAC>","import { Dispatch} from \"redux\";\r\nimport {authAPI, LoginParamsType} from \"../../api/cards-api\";\r\nimport {setStatusAC} from \"../../app/app-reducer\";\r\nimport {setUserDataAC} from \"../Profile/profile-reducer\";\r\nimport {AppActionsType} from \"../../redux/store\";\r\n\r\n\r\nconst initialState = {\r\n        isLoggedIn: false,\r\n         error: ''\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case 'login/IS-LOGGED-IN':\r\n            return {...state, isLoggedIn:action.isLoggedIn}\r\n        case \"login/SET_ERROR\":\r\n            return {...state, error: action.error }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n// actions\r\nexport const isLoggedInAC = (isLoggedIn: boolean) => (\r\n    {type: 'login/IS-LOGGED-IN', isLoggedIn} as const)\r\n\r\nexport const isError = (error: string) => (\r\n    {type: 'login/SET_ERROR', error} as const)\r\n\r\n\r\n\r\n// thunk\r\nexport const loginTC = (data: LoginParamsType) => (dispatch: Dispatch<AppActionsType>) => {\r\n        dispatch(setStatusAC('loading'))\r\n        authAPI.login(data)\r\n            .then((res) => {\r\n                dispatch(isLoggedInAC(true))\r\n                console.log(res.data)\r\n                dispatch(setUserDataAC(res.data))\r\n                dispatch(setStatusAC('succeeded'))\r\n            })\r\n            .catch(err => {\r\n                    const error = err.response\r\n                        ? err.response.data.error\r\n                        : (err.message + ', more details in the console');\r\n                dispatch(isError(error))\r\n                dispatch(setStatusAC('failed'))\r\n\r\n            })\r\n}\r\n\r\nexport const logoutTC = () => (dispatch: Dispatch<AppActionsType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    authAPI.logout()\r\n        .then((res)=>{\r\n            dispatch(isLoggedInAC(false))\r\n            dispatch(setStatusAC('succeeded'))\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ? err.response.data.error\r\n                : (err.message + ', more details in the console');\r\n            dispatch(isError(error))\r\n            dispatch(setStatusAC('failed'))\r\n\r\n        })\r\n}\r\n\r\n//type\r\nexport type LoginActionsType = IsLoggedInType  | IsErrorType\r\n\r\nexport type IsLoggedInType = ReturnType<typeof isLoggedInAC>\r\nexport type IsErrorType = ReturnType<typeof isError>\r\n","import {authAPI} from \"../api/cards-api\";\r\nimport {isLoggedInAC} from \"../features/Login/login-reducer\";\r\nimport {setUserDataAC} from \"../features/Profile/profile-reducer\";\r\nimport {AppActionsType, AppThunkType} from \"../redux/store\";\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\nconst initialState = {\r\n    isInitialized: false,\r\n    status: 'idle' as RequestStatusType\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-IS-INITIALIZED':\r\n            return {...state, isInitialized: action.isInitialized}\r\n        case 'APP/SET-STATUS':\r\n            return {...state, status: action.status}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n// actions\r\nexport const setIsInitializedAC = (isInitialized: boolean) => ({type: 'APP/SET-IS-INITIALIZED', isInitialized} as const)\r\nexport const setStatusAC = (status: RequestStatusType) => ({type: 'APP/SET-STATUS', status} as const)\r\n\r\n\r\n\r\n// thunk\r\n/*export const initializeAppTC = (): AppThunkType => (dispatch) => {\r\n    authAPI.authMe().then(res => {\r\n        if (res.status === 200) {\r\n            dispatch(setUserDataAC(res.data.data))\r\n            dispatch(isLoggedInAC(true))\r\n        } else {\r\n        }\r\n    })\r\n        .finally(() => {\r\n            dispatch(setIsInitializedAC(true));\r\n        })\r\n}*/\r\n\r\nexport const initializeAppTC = (): AppThunkType => async dispatch => {\r\n    try{\r\n        const res = await authAPI.authMe()\r\n        dispatch(setUserDataAC(res.data.data))\r\n        dispatch(isLoggedInAC(true))\r\n        dispatch(setIsInitializedAC(true));\r\n    }\r\n\r\n   catch (e) {\r\n       dispatch(setIsInitializedAC(true));\r\n   }\r\n    }\r\n\r\n\r\n\r\n//type\r\nexport type AppReducerActionType = SetStatusACType | SetIsInitializedACType\r\n\r\nexport type SetIsInitializedACType = ReturnType<typeof setIsInitializedAC>\r\nexport type SetStatusACType = ReturnType<typeof setStatusAC>\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport preloader from './Ellipsis.gif'\r\nimport style from '../../App.module.css'\r\n\r\n\r\n\r\nfunction Preloader() {\r\n\r\n    return (\r\n        <div className=\"preloader\">\r\n           <img className={style.loader} src={preloader} alt=\"preloader\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Preloader;\r\n\r\n","\r\nimport React, { ChangeEvent, useState } from 'react';\r\nimport {updateUserDateTC} from \"../features/Profile/profile-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\ntype EditableSpanPropsType = {\r\n    value: string\r\n    onChange: (newValue: string ) => void\r\n}\r\n\r\nexport const EditableSpan = React.memo(function (props: EditableSpanPropsType) {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n   let [title, setTitle] = useState(props.value);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n        props.onChange(title);\r\n    }\r\n    const activateViewMode = () => {\r\n        setEditMode(false);\r\n        setTitle(title)\r\n\r\n       ;\r\n\r\n    }\r\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.onChange(e.currentTarget.value)\r\n    }\r\n\r\n    return editMode\r\n        ? <input value={props.value} onChange={changeTitle} autoFocus onBlur={activateViewMode}/>\r\n        : <span onDoubleClick={activateEditMode}>{props.value}</span>\r\n\r\n})\r\n","import React, { useEffect, useState} from 'react';\r\nimport '../../App.module.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootState} from \"../../redux/store\";\r\nimport {logoutTC} from \"../Login/login-reducer\";\r\nimport { Navigate } from 'react-router-dom';\r\nimport { updateUserDateTC} from \"./profile-reducer\";\r\nimport {EditableSpan} from \"../../common/EditableSpan\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\n\r\n\r\n\r\n const Profile = React.memo(() => {\r\n\r\n\r\n     useEffect( () => {\r\n         if (!isLoggedIn){\r\n             return\r\n         }\r\n\r\n     },[])\r\n\r\n     const userName = useSelector<AppRootState, string>(state => state.profile.userData.name)\r\n     const userAvatar = useSelector<AppRootState, string>(state => state.profile.userData.avatar)\r\n     const isLoggedIn = useSelector<AppRootState, boolean>(state => state.login.isLoggedIn)\r\n     const status = useSelector<AppRootState, string>(state => state.app.status)\r\n\r\n     let [name, setName] = useState(userName);\r\n     let [avatar, setAvatar] = useState(userAvatar);\r\n\r\n\r\n\r\n   /*  let [edit, setEdit] = useState(false);\r\n     let [editName, setEditName] = useState(false);\r\n*/\r\n\r\n     const dispatch = useDispatch()\r\n\r\n     const onClickLogoutHandler = () => {\r\n         dispatch<any>(logoutTC())\r\n     }\r\n\r\n    /* const onChangeEditableSpan = (name: string) => {\r\n         debugger\r\n         dispatch<any>(updateUserDateTC(name))\r\n     }\r\n\r\n     const onChangeEditableSpanAva = (avatar: string) => {\r\n         debugger\r\n         dispatch<any>(updateUserAvatarTC(avatar))\r\n     }*/\r\n\r\n     const onChangeUpdateData = () => {\r\n         dispatch<any>(updateUserDateTC(name,avatar))\r\n     }\r\n\r\n   /*  const onChangeName = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.currentTarget.value)\r\n     }\r\n     const onChangeAvatar = (e: ChangeEvent<HTMLInputElement>) => {\r\n         setAvatar(e.currentTarget.value)\r\n     }\r\n     const activateViewMode = () => {\r\n         setEdit(false);\r\n         setEditName(false)\r\n         onChangeUpdateData(name, avatar)\r\n     }\r\n\r\n     const activateEditMode = () => {\r\n         setEdit(true);\r\n     }\r\n     const activateEditNameMode = () => {\r\n         setEditName(true);\r\n     }*/\r\n\r\n     if (!isLoggedIn) {\r\n         return <Navigate to={'/login'}/>\r\n     }\r\n\r\n     return (\r\n         <div className=\"Profile\">\r\n             {status === 'loading' && <Preloader/>}\r\n             <img src={avatar} alt={''}/>\r\n             <br/>\r\n             avatar url:  <EditableSpan value={avatar}  onChange={setAvatar} />\r\n             <br/>\r\n             name: <EditableSpan value={name} onChange={setName}/>\r\n             <button onClick={onChangeUpdateData}>save</button>\r\n            {/* <img src={avatar} alt={''}/>\r\n             <br/>\r\n             {edit\r\n                 ? <input value={avatar} onChange={onChangeAvatar} autoFocus onBlur={activateViewMode}/>\r\n                 : <span onDoubleClick={activateEditMode}>Avatar Url: {avatar}</span>}\r\n\r\n\r\n             <br/>\r\n             {editName\r\n             ? <input value={name} onChange={onChangeName} autoFocus onBlur={activateViewMode}/>\r\n             : <span onDoubleClick={activateEditNameMode}>name: {name}</span>}\r\n\r\n*/}\r\n             <br/>\r\n             <button onClick={onClickLogoutHandler}>Logout</button>\r\n         </div>\r\n     );\r\n })\r\n\r\n\r\nexport default Profile;\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport style from '../../App.module.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {loginTC} from \"./login-reducer\";\r\nimport {AppRootState} from \"../../redux/store\";\r\nimport {Link, Navigate} from 'react-router-dom';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport Logo from \"../../common/Logo\";\r\n\r\n\r\nfunction Login() {\r\n\r\n    const [email, setEmail] = useState('maria.stachovski.de@gmail.com')\r\n    const [password, setPassword] = useState('123456780')\r\n    const [rememberMe, setRememberMe] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppRootState, boolean>(state => state.login.isLoggedIn)\r\n    const isError = useSelector<AppRootState, string>(state => state.login.error)\r\n    const status = useSelector<AppRootState, string>(state => state.app.status)\r\n\r\n    const onChangeInputHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(event.currentTarget.value)\r\n    }\r\n    const onChangeInputPassHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(event.currentTarget.value)\r\n    }\r\n    const onChangeInputCheckbox = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setRememberMe(event.currentTarget.checked)\r\n    }\r\n\r\n    const onClickButtonHandler = () => {\r\n        dispatch<any>(loginTC({email, password, rememberMe}))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={style.formBlock}>\r\n            <div className={style.titleFormBlock}>\r\n                    <Logo/>\r\n                <h3>Login</h3>\r\n            </div>\r\n            {status === 'loading' && <Preloader/>}\r\n            <div className={style.formBlockInput}>\r\n                <input className={style.defaultInput} value={email} onChange={onChangeInputHandler}/>\r\n                <input className={style.defaultInput} type={\"password\"} value={password}\r\n                       onChange={onChangeInputPassHandler}/>\r\n                <div className={style.error}>{isError}</div>\r\n                <label>\r\n                    <input type={\"checkbox\"} name=\"RememberMe\" onChange={onChangeInputCheckbox}/>RememberMe\r\n                </label>\r\n                <button className={style.defaultButton} onClick={onClickButtonHandler}>Login</button>\r\n\r\n            </div>\r\n            <div className={style.footerFormBlock}>\r\n                <div><Link to={\"/forgot\"}>ForgotPassword</Link></div>\r\n                <div>Don't have an account?</div>\r\n                <div>Sign up</div>\r\n            </div>\r\n            {isLoggedIn && (<Navigate to={'/profile'}/>)}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../../api/cards-api\";\r\nimport {isError, isLoggedInAC} from \"../Login/login-reducer\";\r\nimport {AppActionsType} from \"../../redux/store\";\r\nimport {setStatusAC} from \"../../app/app-reducer\";\r\n\r\nconst initialState = {\r\n    email: '',\r\n    password: '',\r\n    error: ''\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"REGISTRATION\":\r\n            return {...state, email: action.email, password: action.password}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n// actions\r\nexport const registrationAC = (email: string, password: string) => (\r\n    {type: 'REGISTRATION', email, password} as const)\r\n\r\n\r\n// thunk\r\n\r\nexport const registrationTC = (email: string, password: string) => (dispatch: Dispatch<AppActionsType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    authAPI.registration(email, password)\r\n        .then((res) => {\r\n            console.log(res.data.addedUser)\r\n            dispatch(setStatusAC('succeeded'))\r\n            dispatch(isLoggedInAC(true))\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ? err.response.data.error\r\n                : (err.message + ', more details in the console');\r\n            console.log(error)\r\n            dispatch(isError(error))\r\n            dispatch(setStatusAC('failed'))\r\n        })\r\n}\r\n\r\n//type\r\nexport type RegistrationActionsType = RegistrationType\r\nexport type RegistrationType = ReturnType<typeof registrationAC>\r\n\r\n\r\n\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport style from '../../App.module.css';\r\nimport {registrationTC} from \"./regist-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootState} from \"../../redux/store\";\r\nimport { Navigate } from 'react-router-dom';\r\nimport {isError} from \"../Login/login-reducer\";\r\nimport Logo from \"../../common/Logo\";\r\n\r\nfunction Registration() {\r\n\r\n    const dispatch = useDispatch()\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [password1, setPassword1] = useState('')\r\n\r\n    const isLoggedIn = useSelector<AppRootState, boolean>(state => state.login.isLoggedIn)\r\n    const error = useSelector<AppRootState, string>(state => state.login.error)\r\n\r\n\r\n    const onChangeHandlerEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n    }\r\n\r\n    const onChangeHandlerPass = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value)\r\n    }\r\n    const onChangeHandlerPass1 = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword1(e.currentTarget.value)\r\n    }\r\n\r\nconst onClickHandler = () => {\r\n        if (password != password1){\r\n            dispatch(isError('Password is not correct'))\r\n        } else {\r\n            dispatch<any>(registrationTC(email,password))\r\n        }\r\n\r\n}\r\n\r\n    return (\r\n        <div className={style.formBlock}>\r\n            <div className={style.titleFormBlock}>\r\n              <Logo/>\r\n                <h4>Registration</h4>\r\n            </div>\r\n            <div className={style.formBlockInput}>\r\n\r\n <input className={style.defaultInput} value={email} placeholder={'Email'} onChange={onChangeHandlerEmail}  />\r\n\r\n\r\n    <input className={style.defaultInput} value={password} placeholder={'Password'} onChange={onChangeHandlerPass}   />\r\n\r\n\r\n                <input className={style.defaultInput} placeholder={'Confirm password'} value={password1} onChange={onChangeHandlerPass1}   />\r\n\r\n    <div className={style.error}>{error ? error : ''}</div>\r\n\r\n    <button className={style.defaultButton} onClick={onClickHandler}>Register</button>\r\n            </div>\r\n            <div className={style.footerFormBlock}>\r\n\r\n            </div>\r\n            {isLoggedIn && <Navigate to={'/login'}/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Registration;\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../../api/cards-api\";\r\nimport {AppActionsType} from \"../../redux/store\";\r\nimport {setStatusAC} from \"../../app/app-reducer\";\r\nimport {isError} from \"../Login/login-reducer\";\r\n\r\nconst initialState = {\r\n isSendPassword: false\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\n\r\nexport const resetReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'CREATE-NEW-PASSWORD':\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n// actions\r\nexport const createNewPasswordAC = (isSendPassword: boolean) => ({\r\n    type:  \"CREATE-NEW-PASSWORD\",\r\n    payload: {isSendPassword} }as const)\r\n\r\n// thunk\r\n\r\nexport const createNewPasswordTC = (password: string, token: string) => (dispatch: Dispatch<AppActionsType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    authAPI.createNewPassword(password, token)\r\n        .then(res => {\r\n            dispatch(createNewPasswordAC(true))\r\n            dispatch(setStatusAC('succeeded'))\r\n            console.log(res.data)\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ? err.response.data.error\r\n                : (err.message + ', more details in the console');\r\n            dispatch(isError(error))\r\n            dispatch(setStatusAC('failed'))\r\n\r\n        })\r\n}\r\n\r\n//type\r\n\r\nexport type NewPasswordActionTypes = CreateNewPasswordType\r\n export type CreateNewPasswordType = ReturnType<typeof createNewPasswordAC>","import React, {ChangeEvent, useState} from 'react';\r\nimport style from '../../App.module.css';\r\nimport {Navigate, useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {createNewPasswordTC} from \"./reset-reducer\";\r\nimport {AppRootState} from \"../../redux/store\";\r\nimport Logo from \"../../common/Logo\";\r\n\r\n\r\n\r\nfunction Reset() {\r\n\r\n    const [password, setPassword] = useState('')\r\n    const isSendPassword = useSelector<AppRootState, boolean>(state => state.reset.isSendPassword)\r\n        const dispatch = useDispatch()\r\n\r\n    const onChangeHandlerPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value)\r\n    }\r\n\r\n    const {resetPasswordToken} = useParams<{resetPasswordToken:string}>()\r\n\r\n    const onClickHandler = () =>{\r\n        debugger\r\n        if (resetPasswordToken){\r\n            dispatch<any>(createNewPasswordTC(password,resetPasswordToken))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.formBlock}>\r\n            <div className={style.titleFormBlock}>\r\n                <Logo />\r\n                <h5>Create new password</h5>\r\n            </div>\r\n            <div className={style.formBlockInput}>\r\n                <input className={style.defaultInput} placeholder={'New password'} value={password} onChange={onChangeHandlerPassword}  />\r\n\r\n                <div>Create new password and we will send you further instructions to email </div>\r\n\r\n                <button className={style.defaultButton} onClick={onClickHandler}>Create new password</button></div>\r\n            {isSendPassword && (<Navigate to={'/login'}/>)}\r\n\r\n            <div className={style.footerFormBlock}>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Reset;\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport image404 from '../assets/404.png'\r\nimport style from './Error404.module.css'\r\n\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <div className={style.image}><img src={image404}\r\n                                          alt=\"cat\"/></div>\r\n            <div className={style.errorText}>Oops, This page does not exist</div>\r\n            <button>  <NavLink to={'/profile'} className={style.back}>go to homepage</NavLink></button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error404;","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../../api/cards-api\";\r\nimport {isError} from \"../Login/login-reducer\";\r\nimport {setStatusAC} from \"../../app/app-reducer\";\r\nimport {AppActionsType} from \"../../redux/store\";\r\n\r\nconst initialState = {\r\n    email:'',\r\n    isSendInstruction: false\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const forgotPasswordReducer = (state: InitialStateType = initialState, action:AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'FORGOT-PASSWORD':\r\n            return {...state, ... action.payload}\r\n        case 'IS-SEND-INSTRUCTION':\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n// actions\r\n\r\nexport const forgotPasswordAC = (email: string) => ({\r\n    type: 'FORGOT-PASSWORD',\r\n    payload: {email} } as const)\r\n\r\nexport const isSendInstructionAC = (isSendInstruction: boolean) => ({\r\n    type: 'IS-SEND-INSTRUCTION',\r\n    payload: {isSendInstruction} } as const)\r\n\r\n// thunk\r\n\r\nexport const forgotPasswordTC = (email: string) => ( dispatch: Dispatch<AppActionsType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    authAPI.forgotPassword(email)\r\n        .then(res => {\r\n            dispatch(isSendInstructionAC(true))\r\n            dispatch(setStatusAC('succeeded'))\r\n            console.log(res.data)\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ? err.response.data.error\r\n                : (err.message + ', more details in the console');\r\n            dispatch(isError(error))\r\n            dispatch(setStatusAC('failed'))\r\n\r\n        })\r\n}\r\n\r\n//type\r\nexport type ForgotPasswordActionsType = ForgotPasswordType | IsSendInstructionType\r\n\r\nexport type ForgotPasswordType = ReturnType<typeof forgotPasswordAC>\r\nexport type IsSendInstructionType = ReturnType<typeof isSendInstructionAC>","import React, {ChangeEvent, useState} from 'react';\r\nimport style from '../../App.module.css';\r\nimport {Link, Navigate} from \"react-router-dom\";\r\nimport {forgotPasswordTC} from \"./forgotPassword-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootState} from \"../../redux/store\";\r\nimport logoEmail from \"../../common/assets/4698238.png\";\r\nimport Logo from \"../../common/Logo\";\r\n\r\n\r\nfunction ForgotPassword() {\r\n\r\n    const [email, setEmail] = useState('')\r\n\r\n    const isSendInstructionAC = useSelector<AppRootState, boolean>(state => state.forgot.isSendInstruction)\r\n    const isError = useSelector<AppRootState, string>(state => state.login.error)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onChangeHandlerEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n    }\r\n    const onClickHandler = () => {\r\n        dispatch<any>(forgotPasswordTC(email))\r\n\r\n    }\r\n\r\n    /* if(isSendInstructionAC) {\r\n         return <Navigate to={'/check'}/>\r\n     }*/\r\n\r\n    return (\r\n        <div>\r\n            {isSendInstructionAC ? <div className={style.formBlock}>\r\n                    <div className={style.titleFormBlock}>\r\n                        <Logo />\r\n                        <h4>Check Email</h4>\r\n                        <div><img className={style.checkEmail} src={logoEmail} alt={'email'}/></div>\r\n                    </div>\r\n\r\n                    <div className={style.footerFormBlock}>\r\n                        <div>We’ve sent an Email with instructions to {email}</div>\r\n                    </div>\r\n                </div>\r\n                : <div className={style.formBlock}>\r\n                    <div className={style.titleFormBlock}>\r\n                       <Logo />\r\n                        <h4>Forgot your password?</h4>\r\n                    </div>\r\n                    <div className={style.formBlockInput}>\r\n                        <input className={style.defaultInput} placeholder={'Email'} value={email} onChange={onChangeHandlerEmail}/>\r\n\r\n                        <div>Enter your email address and we will send you further instructions</div>\r\n                        <div className={style.error}>{isError}</div>\r\n                        <button className={style.defaultButton} onClick={onClickHandler}>Send instruction</button>\r\n                    </div>\r\n                    {isSendInstructionAC && (<Navigate to={'/check'}/>)}\r\n\r\n                    <div className={style.footerFormBlock}>\r\n                        <div>Did you remember your password?</div>\r\n                        <div><Link to={\"/login\"}> Try logging in</Link></div>\r\n                    </div>\r\n                </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ForgotPassword;\r\n\r\n","import {Navigate, Route, Routes} from \"react-router-dom\";\r\nimport Profile from \"../../features/Profile/Profile\";\r\nimport Login from \"../../features/Login/Login\";\r\nimport Registration from \"../../features/Registration/Registration\";\r\nimport Reset from \"../../features/ResetPassword/Reset\";\r\nimport Error404 from \"../../common/Error404/Page404\";\r\nimport React from \"react\";\r\nimport ForgotPassword from \"../../features/ForgotPassword/ForgotPassword\";\r\n\r\n\r\nexport const AllRoutes = () => {\r\n    return (\r\n    <Routes>\r\n        <Route path=\"/\" element={<Profile />}/>\r\n        <Route path=\"login\" element={<Login/>}/>\r\n        <Route path=\"profile\" element={<Profile/>}/>\r\n        <Route path=\"registration\" element={<Registration/>}/>\r\n        <Route path=\"forgot\" element={<ForgotPassword />}/>\r\n        <Route path=\"reset/:resetPasswordToken\" element={<Reset />}/>\r\n        <Route path=\"404\" element={<Error404/>}/>\r\n        <Route path=\"*\" element={<Navigate to=\"/404\"/>}/>\r\n    </Routes>)\r\n}\r\n\r\n","import React, {useEffect} from 'react';\r\nimport style from './App.module.css';\r\nimport Header from \"./common/Header/Header\";\r\nimport {initializeAppTC} from \"./app/app-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootState} from \"./redux/store\";\r\nimport Preloader from \"./common/Preloader/Preloader\";\r\nimport {AllRoutes} from \"./app/Routes/AllRoutes\";\r\n\r\nfunction App() {\r\n\r\n    const dispatch = useDispatch()\r\n    const isInitialized = useSelector<AppRootState, boolean>( state => state.app.isInitialized)\r\n\r\n\r\n    useEffect(()=>{\r\n        dispatch<any>(initializeAppTC())\r\n    },[])\r\n\r\n   /* if (!isInitialized){\r\n        return <Preloader/>\r\n    }*/\r\n\r\n    return (\r\n        <div className={style.mainBlock}>\r\n\r\n            <Header/>\r\n            {!isInitialized && <Preloader/>}\r\n           <AllRoutes />\r\n\r\n            <footer className={style.footerBlock}>\r\n                @2022 cards training project\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk, { ThunkAction } from \"redux-thunk\";\r\nimport {appReducer, AppReducerActionType} from \"../app/app-reducer\";\r\nimport {LoginActionsType, loginReducer} from \"../features/Login/login-reducer\";\r\nimport {ProfileActionTypes, profileReducer} from \"../features/Profile/profile-reducer\";\r\nimport {NewPasswordActionTypes, resetReducer} from \"../features/ResetPassword/reset-reducer\";\r\nimport {ForgotPasswordActionsType, forgotPasswordReducer} from \"../features/ForgotPassword/forgotPassword-reducer\";\r\nimport {RegistrationActionsType} from \"../features/Registration/regist-reducer\";\r\n\r\n// объединяя reducer-ы с помощью combineReducers,\r\n// мы задаём структуру нашего единственного объекта-состояния\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    login:loginReducer,\r\n    profile: profileReducer,\r\n    reset: resetReducer,\r\n    forgot: forgotPasswordReducer\r\n})\r\n// определить автоматически тип всего объекта состояния\r\nexport type AppRootState = ReturnType<typeof rootReducer>\r\n// Типизация экшн для всего апп\r\nexport type AppActionsType = LoginActionsType | ProfileActionTypes | AppReducerActionType | ForgotPasswordActionsType | RegistrationActionsType | NewPasswordActionTypes\r\n\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType, AppRootState, unknown, AppActionsType>\r\n\r\n\r\n// непосредственно создаём store\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./redux/store\";\r\nimport { HashRouter} from \"react-router-dom\";\r\n\r\nconst root = ReactDOM.createRoot(\r\n    document.getElementById('root') as HTMLElement\r\n);\r\nroot.render(\r\n    <HashRouter>\r\n        <Provider store={store}>\r\n\r\n                <App/>\r\n\r\n        </Provider>\r\n    </HashRouter>\r\n)\r\n;\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}