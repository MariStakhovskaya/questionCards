{"version":3,"sources":["App.module.css","features/Profile/Modal.module.css","common/Error404/Error404.module.css","common/Header/Header.module.css","common/assets/cpLogo.png","common/Preloader/Ellipsis.gif","features/Profile/Profile.module.css","common/assets/404.png","common/assets/4698238.png","common/Logo.tsx","common/Header/Header.tsx","api/cards-api.ts","features/Profile/profile-reducer.ts","features/Login/login-reducer.ts","app/app-reducer.ts","common/Preloader/Preloader.tsx","common/EditableSpan.tsx","features/Profile/ModalProfile.tsx","features/Profile/Profile.tsx","features/Login/Login.tsx","features/Registration/regist-reducer.ts","features/Registration/Registration.tsx","features/ResetPassword/reset-reducer.ts","features/ResetPassword/Reset.tsx","common/Error404/Page404.tsx","features/ForgotPassword/forgotPassword-reducer.ts","features/ForgotPassword/ForgotPassword.tsx","app/Routes/AllRoutes.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx"],"names":["module","exports","mainBlock","formBlock","titleFormBlock","formBlockInput","footerBlock","footerFormBlock","checkbox","defaultButton","defaultInput","labelInput","preloader","loader","error","checkEmail","logo","modal","active","modalContent","wrapper","image","errorText","back","headerContainer","headerMenu","__webpack_require__","p","profile","Logo","react_default","a","createElement","className","style","src","alt","Header","common_Logo","react_router_dom","to","instance","axios","create","baseURL","withCredentials","authAPI","data","post","Object","objectSpread","delete","email","password","name","avatar","put","from","message","resetPasswordToken","initialState","userData","_id","publicCardPacksCount","isAdmin","verified","rememberMe","setUserDataAC","type","payload","isLoggedIn","isLoggedInAC","isError","loginTC","dispatch","setStatusAC","then","res","console","log","catch","err","response","setTimeout","isInitialized","status","initializeAppTC","finally","Preloader","EditableSpan","React","memo","props","_useState","useState","_useState2","slicedToArray","editMode","setEditMode","_useState3","value","_useState4","title","setTitle","onChange","e","currentTarget","autoFocus","onBlur","onDoubleClick","ModalProfile","concat","styles","onClick","setActive","stopPropagation","children","Profile","useEffect","userName","useSelector","state","userAvatar","login","app","setName","setAvatar","_useState5","_useState6","modalActive","setModalActive","useDispatch","Preloader_Preloader","Profile_ModalProfile","updatedUser","updateUserDateTC","react_router","Login","setEmail","setPassword","setRememberMe","event","checked","registrationTC","addedUser","Registration","password1","setPassword1","placeholder","isSendPassword","createNewPasswordTC","token","Reset","reset","useParams","Error404","image404","isSendInstruction","forgotPasswordTC","ForgotPassword","isSendInstructionAC","forgot","logoEmail","AllRoutes","path","element","Profile_Profile","Login_Login","Registration_Registration","ForgotPassword_ForgotPassword","ResetPassword_Reset","Page404","App","Header_Header","AllRoutes_AllRoutes","reportWebVitals","onPerfEntry","Function","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","arguments","length","undefined","action","store","createStore","applyMiddleware","thunk","window","ReactDOM","createRoot","document","getElementById","render","es","src_App"],"mappings":"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","file":"static/js/main.2cc9b920.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBlock\":\"App_mainBlock__2HF24\",\"formBlock\":\"App_formBlock__1zaAh\",\"titleFormBlock\":\"App_titleFormBlock__3ZC75\",\"formBlockInput\":\"App_formBlockInput__2Z6wr\",\"footerBlock\":\"App_footerBlock__1vnFk\",\"footerFormBlock\":\"App_footerFormBlock__2ndWh\",\"checkbox\":\"App_checkbox___ETUF\",\"defaultButton\":\"App_defaultButton__12b8P\",\"defaultInput\":\"App_defaultInput__2Pgcg\",\"labelInput\":\"App_labelInput__2orqK\",\"preloader\":\"App_preloader__3v5n2\",\"loader\":\"App_loader__2oKrW\",\"error\":\"App_error__28HgU\",\"checkEmail\":\"App_checkEmail__3xmvW\",\"logo\":\"App_logo__2UF9l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__2Bpo5\",\"active\":\"Modal_active__20HM-\",\"modalContent\":\"Modal_modalContent__1Ib2r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Error404_wrapper__6QRdJ\",\"image\":\"Error404_image__1tgfK\",\"errorText\":\"Error404_errorText__DB3_j\",\"back\":\"Error404_back__MQN98\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Header_headerContainer__1Ta32\",\"headerMenu\":\"Header_headerMenu__2eVCJ\"};","module.exports = __webpack_public_path__ + \"static/media/cpLogo.4d8df5a9.png\";","module.exports = __webpack_public_path__ + \"static/media/Ellipsis.6cf03e7b.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2CJLi\"};","module.exports = __webpack_public_path__ + \"static/media/404.1340f194.png\";","module.exports = __webpack_public_path__ + \"static/media/4698238.068caec9.png\";","import React from 'react';\r\nimport logo from './assets/cpLogo.png'\r\nimport style from '../App.module.css'\r\n\r\n\r\n\r\nfunction Logo() {\r\n\r\n    return (\r\n        <div className=\"logo\">\r\n            <img className={style.logo} src={logo} alt=\"logo pet project\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;\r\n\r\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport style from './Header.module.css'\r\nimport Logo from \"../Logo\";\r\n\r\nfunction Header() {\r\n\r\n    return (\r\n        <div className={style.headerContainer}>\r\n            <Logo/>\r\n            <nav className={style.headerMenu}>\r\n\r\n                <Link to={\"/login\"}>Login</Link>\r\n                <Link to={\"/profile\"}>Profile</Link>\r\n                <Link to={\"/registration\"}>Registration</Link>\r\n                <Link to={\"/forgot\"}>ForgotPassword</Link>\r\n                {/*<Link to={\"/reset\"}>Reset</Link>*/}\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n\r\n","import axios from \"axios\";\r\n\r\n\r\nexport const instance = axios.create({\r\n    baseURL:'https://neko-back.herokuapp.com/2.0/',\r\n      /*  baseURL: process.env.REACT_APP_BACK_URL || 'http://localhost:7542/2.0/',*/\r\n        withCredentials: true,\r\n    })\r\n\r\n// baseURL: 'https://neko-back.herokuapp.com/2.0/'\r\n//http://localhost:7542/2.0/\r\n\r\n\r\n// api\r\nexport const authAPI = {\r\n    login(data: LoginParamsType) {\r\n      return instance.post<LoginResponseType>('/auth/login', {...data})\r\n    },\r\n    authMe(){\r\n        return instance.post<LoginResponseType>('/auth/me',{})\r\n    },\r\n    logout(){\r\n        return instance.delete<logOutType>('auth/me')\r\n    },\r\n    registration(email: string, password: string){\r\n        return instance.post('auth/register', {email, password})\r\n    },\r\n    updateUserData(name:string, avatar: string) {\r\n        return instance.put('auth/me', {name,avatar})\r\n    },\r\n    forgotPassword(email: string) {\r\n            return instance.post<ForgotDataType>('/auth/forgot', {\r\n            email, from: '<maryia.jegorova@gmail.com>',\r\n                message: `<div style=\"background-color: #d0eca1; padding: 20px; border-radius: 15px\">This is a password recovery link: <a href='https://MariStakhovskaya.github.io/questionCards/#/reset/$token$'>link</a></div>`\r\n        })\r\n    },\r\n    createNewPassword(password: string, resetPasswordToken: string){\r\n        return instance.post('/auth/set-new-password',{password, resetPasswordToken})\r\n    }\r\n}\r\n\r\n\r\n// types\r\n\r\n\r\ntype logOutType = {\r\n    info: string,\r\n    error: string\r\n}\r\n\r\nexport type ForgotDataType = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n}\r\nexport type LoginParamsType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe?: boolean,\r\n}\r\n\r\nexport type LoginResponseType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar: string;\r\n    publicCardPacksCount: number; // количество колод\r\n    created: string;\r\n    updated: string;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n    error: string;\r\n\r\n}","import {Dispatch} from \"redux\";\r\nimport {authAPI, LoginResponseType} from \"../../api/cards-api\";\r\nimport {setStatusAC} from \"../../app/app-reducer\";\r\nimport {AppActionsType} from \"../../redux/store\";\r\nimport {isError} from \"../Login/login-reducer\";\r\n\r\nconst initialState = {\r\n    userData: {\r\n    _id: '',\r\n    email: '',\r\n    name: '',\r\n    avatar: '',\r\n    publicCardPacksCount: 0, // количество колод\r\n    isAdmin: false,\r\n    verified: false, // подтвердил ли почту\r\n    rememberMe: false,\r\n    error: ''}\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    debugger\r\n    switch (action.type) {\r\n        case \"login/SET_USER\":\r\n            return {...state,\r\n        ... action.payload}\r\n        case \"UPDATE-USER-DATA\":\r\n            return {...state,\r\n                userData:{...state.userData,\r\n                    ...action.payload}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n// actions\r\nexport const setUserDataAC = (userData: LoginResponseType) => ({\r\n    type: 'login/SET_USER',\r\n    payload: {userData}\r\n} as const)\r\n\r\nexport const updateUserDateAC = (name: string, avatar: string) => ({\r\n    type: 'UPDATE-USER-DATA',\r\n    payload: {name,avatar}\r\n} as const)\r\n\r\n\r\n// thunk\r\n\r\nexport const updateUserDateTC = (name:string, avatar: string) => (dispatch: Dispatch<AppActionsType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    authAPI.updateUserData(name, avatar)\r\n        .then((res)=>{\r\n            console.log(res.data.updatedUser)\r\n            dispatch(updateUserDateAC(res.data.updatedUser.name, res.data.updatedUser.avatar))\r\n            dispatch(setStatusAC('succeeded'))\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ? err.response.data.error\r\n                : (err.message + ', more details in the console');\r\n            dispatch(isError(error))\r\n            setTimeout(() => {\r\n                dispatch(isError(''))\r\n            }, 3000)\r\n            dispatch(setStatusAC('failed'))})\r\n}\r\n\r\n\r\n//type\r\nexport type ProfileActionTypes = UpdateUserDataType  | SetUserDataType\r\n\r\nexport type UpdateUserDataType = ReturnType<typeof updateUserDateAC>\r\nexport type SetUserDataType = ReturnType<typeof setUserDataAC>","import { Dispatch} from \"redux\";\r\nimport {authAPI, LoginParamsType} from \"../../api/cards-api\";\r\nimport {setStatusAC} from \"../../app/app-reducer\";\r\nimport {setUserDataAC} from \"../Profile/profile-reducer\";\r\nimport {AppActionsType, AppThunkType} from \"../../redux/store\";\r\n\r\n\r\nconst initialState = {\r\n        isLoggedIn: false,\r\n         error: ''\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case 'login/IS-LOGGED-IN':\r\n            return {...state, isLoggedIn:action.isLoggedIn}\r\n        case \"login/SET_ERROR\":\r\n            return {...state, error: action.error }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n// actions\r\nexport const isLoggedInAC = (isLoggedIn: boolean) => (\r\n    {type: 'login/IS-LOGGED-IN', isLoggedIn} as const)\r\n\r\nexport const isError = (error: string) => (\r\n    {type: 'login/SET_ERROR', error} as const)\r\n\r\n\r\n\r\n// thunk\r\nexport const loginTC = (data: LoginParamsType):AppThunkType => (dispatch: Dispatch<AppActionsType>) => {\r\n        dispatch(setStatusAC('loading'))\r\n        authAPI.login(data)\r\n            .then((res) => {\r\n                dispatch(isLoggedInAC(true))\r\n                console.log(res.data)\r\n                dispatch(setUserDataAC(res.data))\r\n                dispatch(setStatusAC('succeeded'))\r\n            })\r\n            .catch(err => {\r\n                    const error = err.response\r\n                        ? err.response.data.error\r\n                        : (err.message + ', more details in the console');\r\n                dispatch(isError(error))\r\n                setTimeout(() => {\r\n                    dispatch(isError(''))\r\n                }, 3000)\r\n                dispatch(setStatusAC('failed'))\r\n\r\n            })\r\n}\r\n\r\nexport const logoutTC = () => (dispatch: Dispatch<AppActionsType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    authAPI.logout()\r\n        .then((res)=>{\r\n            dispatch(isLoggedInAC(false))\r\n            dispatch(setStatusAC('succeeded'))\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ? err.response.data.error\r\n                : (err.message + ', more details in the console');\r\n            dispatch(isError(error))\r\n            dispatch(setStatusAC('failed'))\r\n\r\n        })\r\n}\r\n\r\n//type\r\nexport type LoginActionsType = IsLoggedInType  | IsErrorType\r\n\r\nexport type IsLoggedInType = ReturnType<typeof isLoggedInAC>\r\nexport type IsErrorType = ReturnType<typeof isError>\r\n","import {authAPI} from \"../api/cards-api\";\r\nimport { isLoggedInAC} from \"../features/Login/login-reducer\";\r\nimport {setUserDataAC} from \"../features/Profile/profile-reducer\";\r\nimport {AppActionsType, AppThunkType} from \"../redux/store\";\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\nconst initialState = {\r\n    isInitialized: false,\r\n    status: 'idle' as RequestStatusType\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-IS-INITIALIZED':\r\n            return {...state, isInitialized: action.isInitialized}\r\n        case 'APP/SET-STATUS':\r\n            return {...state, status: action.status}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n// actions\r\nexport const setIsInitializedAC = (isInitialized: boolean) => ({type: 'APP/SET-IS-INITIALIZED', isInitialized} as const)\r\nexport const setStatusAC = (status: RequestStatusType) => ({type: 'APP/SET-STATUS', status} as const)\r\n\r\n\r\n\r\n// thunk\r\nexport const initializeAppTC = (): AppThunkType => (dispatch) => {\r\n    authAPI.authMe().then(res => {\r\n        if (res.status === 200) {\r\n\r\n            dispatch(setUserDataAC(res.data))\r\n            dispatch(isLoggedInAC(true))\r\n        } else {\r\n        }\r\n    })\r\n        .finally(() => {\r\n            dispatch(setIsInitializedAC(true));\r\n        })\r\n}\r\n\r\n/*\r\nexport const initializeAppTC = (): AppThunkType => async (dispatch) => {\r\n    try{\r\n        const res = await authAPI.authMe()\r\n        if (res.status === 200) {\r\n            dispatch(setUserDataAC(res.data.data))\r\n            dispatch(isLoggedInAC(true))\r\n\r\n        }\r\n    }\r\n\r\n   catch (e) {\r\n\r\n   }\r\n   finally {\r\n        dispatch(setIsInitializedAC(true));\r\n    }\r\n    }\r\n*/\r\n\r\n\r\n\r\n//type\r\nexport type AppReducerActionType = SetStatusACType | SetIsInitializedACType\r\n\r\nexport type SetIsInitializedACType = ReturnType<typeof setIsInitializedAC>\r\nexport type SetStatusACType = ReturnType<typeof setStatusAC>\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport preloader from './Ellipsis.gif'\r\nimport style from '../../App.module.css'\r\n\r\n\r\n\r\nfunction Preloader() {\r\n\r\n    return (\r\n        <div className=\"preloader\">\r\n           <img className={style.loader} src={preloader} alt=\"preloader\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Preloader;\r\n\r\n","\r\nimport React, { ChangeEvent, useState } from 'react';\r\nimport {updateUserDateTC} from \"../features/Profile/profile-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\ntype EditableSpanPropsType = {\r\n    value: string\r\n    onChange: (newValue: string ) => void\r\n}\r\n\r\nexport const EditableSpan = React.memo(function (props: EditableSpanPropsType) {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n   let [title, setTitle] = useState(props.value);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n        props.onChange(title);\r\n    }\r\n    const activateViewMode = () => {\r\n        setEditMode(false);\r\n        setTitle(title)\r\n\r\n       ;\r\n\r\n    }\r\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.onChange(e.currentTarget.value)\r\n    }\r\n\r\n    return editMode\r\n        ? <input value={props.value} onChange={changeTitle} autoFocus onBlur={activateViewMode}/>\r\n        : <span onDoubleClick={activateEditMode}>{props.value}</span>\r\n\r\n})\r\n","import React from 'react';\r\nimport  styles from './Modal.module.css';\r\n\r\n\r\ntype ModalProfilePropsType = {\r\n    active: boolean\r\n    setActive: (active:boolean) => void\r\n    children: any\r\n}\r\n\r\nconst ModalProfile = React.memo((props:ModalProfilePropsType) => {\r\n\r\n    return (\r\n        <div className={props.active ?  `${styles.modal} ${styles.active}` : styles.modal} onClick={()=> props.setActive(false)}>\r\n            <div className={props.active ?  `${styles.modalContent} ${styles.active}` : styles.modalContent} onClick={(e)=>e.stopPropagation()}>\r\n                {props.children}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n})\r\n\r\n\r\nexport default ModalProfile\r\n","import React, { useEffect, useState} from 'react';\r\nimport '../../App.module.css';\r\nimport styles from './Profile.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootState, TypeDispatch} from \"../../redux/store\";\r\nimport {logoutTC} from \"../Login/login-reducer\";\r\nimport { Navigate } from 'react-router-dom';\r\nimport { updateUserDateTC} from \"./profile-reducer\";\r\nimport {EditableSpan} from \"../../common/EditableSpan\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ModalProfile from \"./ModalProfile\";\r\n\r\n\r\n\r\n const Profile = React.memo(() => {\r\n\r\n\r\n     useEffect( () => {\r\n         if (!isLoggedIn){\r\n             return\r\n         }\r\n\r\n     },[])\r\n\r\n     const userName = useSelector<AppRootState, string>(state => state.profile.userData.name)\r\n     const userAvatar = useSelector<AppRootState, string>(state => state.profile.userData.avatar)\r\n     const isLoggedIn = useSelector<AppRootState, boolean>(state => state.login.isLoggedIn)\r\n     const status = useSelector<AppRootState, string>(state => state.app.status)\r\n\r\n     let [name, setName] = useState(userName);\r\n     let [avatar, setAvatar] = useState(userAvatar);\r\n     const [modalActive, setModalActive] = useState(false)\r\n\r\n\r\n     const dispatch = useDispatch<TypeDispatch>()\r\n\r\n     const onClickLogoutHandler = () => {\r\n         dispatch(logoutTC())\r\n     }\r\n\r\n\r\n     const onClickUpdateData = () => {\r\n         dispatch(updateUserDateTC(name,avatar))\r\n         setModalActive(false)\r\n     }\r\n\r\n\r\n     if (!isLoggedIn) {\r\n         return <Navigate to={'/login'}/>\r\n     }\r\n\r\n     return (\r\n         <div className={styles.profile}>\r\n             {status === 'loading' && <Preloader/>}\r\n             <img src={userAvatar} alt={''}/>\r\n             <br/>\r\n            avatar URL: {userAvatar}\r\n             <br/>\r\n             name: {userName}\r\n            {/* avatar url:  <EditableSpan value={avatar}  onChange={setAvatar} />\r\n             <br/>\r\n             name: <EditableSpan value={name} onChange={setName}/>*/}\r\n             <br/>\r\n             <button onClick={()=> setModalActive(true)}>Update Profile</button>\r\n\r\n             <br/>\r\n             <button onClick={onClickLogoutHandler}>Logout</button>\r\n             <ModalProfile active={modalActive} setActive={setModalActive}>\r\n                 avatar url:  <EditableSpan value={avatar}  onChange={setAvatar} />\r\n                 <br/>\r\n                 name: <EditableSpan value={name} onChange={setName}/>\r\n                 <button onClick={onClickUpdateData}>save</button>\r\n             </ModalProfile>\r\n\r\n         </div>\r\n     );\r\n })\r\n\r\n\r\nexport default Profile;\r\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport style from '../../App.module.css';\r\n\r\nimport {isError, loginTC} from \"./login-reducer\";\r\nimport {AppRootState, TypeDispatch} from \"../../redux/store\";\r\nimport {Link, Navigate} from 'react-router-dom';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport Logo from \"../../common/Logo\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\n\r\nfunction Login() {\r\n\r\n    const [email, setEmail] = useState('maria.stachovski.de@gmail.com')\r\n    const [password, setPassword] = useState('123456780')\r\n    const [rememberMe, setRememberMe] = useState(false)\r\n\r\n    const dispatch = useDispatch<TypeDispatch>()\r\n    const isLoggedIn = useSelector<AppRootState, boolean>(state => state.login.isLoggedIn)\r\n    const isError = useSelector<AppRootState, string>(state => state.login.error)\r\n    const status = useSelector<AppRootState, string>(state => state.app.status)\r\n\r\n\r\n    const onChangeInputHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(event.currentTarget.value)\r\n\r\n    }\r\n    const onChangeInputPassHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(event.currentTarget.value)\r\n    }\r\n    const onChangeInputCheckbox = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setRememberMe(event.currentTarget.checked)\r\n    }\r\n\r\n    const onClickButtonHandler = () => {\r\n        dispatch(loginTC({email, password, rememberMe}))\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={style.formBlock}>\r\n            <div className={style.titleFormBlock}>\r\n                    <Logo/>\r\n                <h3>Login</h3>\r\n            </div>\r\n            {status === 'loading' && <Preloader/>}\r\n            <div className={style.formBlockInput}>\r\n                <input className={style.defaultInput} value={email} onChange={onChangeInputHandler}/>\r\n                <input className={style.defaultInput} type={\"password\"} value={password}\r\n                       onChange={onChangeInputPassHandler}/>\r\n\r\n                <div className={style.error}>{isError}</div>\r\n\r\n                <label className={style.checkbox}>\r\n                    <input type={\"checkbox\"} name=\"RememberMe\" onChange={onChangeInputCheckbox}/>RememberMe\r\n                </label>\r\n                <button className={style.defaultButton} onClick={onClickButtonHandler}>Login</button>\r\n\r\n            </div>\r\n            <div className={style.footerFormBlock}>\r\n                <p><Link to={\"/forgot\"}>ForgotPassword</Link></p>\r\n                <p>Don't have an account?</p>\r\n                <p><Link to={\"/registration\"}>Sign up</Link></p>\r\n            </div>\r\n            {isLoggedIn && (<Navigate to={'/profile'}/>)}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../../api/cards-api\";\r\nimport {isError, isLoggedInAC} from \"../Login/login-reducer\";\r\nimport {AppActionsType} from \"../../redux/store\";\r\nimport {setStatusAC} from \"../../app/app-reducer\";\r\n\r\nconst initialState = {\r\n    email: '',\r\n    password: '',\r\n    error: ''\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"REGISTRATION\":\r\n            return {...state, email: action.email, password: action.password}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n// actions\r\nexport const registrationAC = (email: string, password: string) => (\r\n    {type: 'REGISTRATION', email, password} as const)\r\n\r\n\r\n// thunk\r\n\r\nexport const registrationTC = (email: string, password: string) => (dispatch: Dispatch<AppActionsType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    authAPI.registration(email, password)\r\n        .then((res) => {\r\n            console.log(res.data.addedUser)\r\n            dispatch(setStatusAC('succeeded'))\r\n            dispatch(isLoggedInAC(true))\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ? err.response.data.error\r\n                : (err.message + ', more details in the console');\r\n            console.log(error)\r\n            dispatch(isError(error))\r\n            setTimeout(() => {\r\n                dispatch(isError(''))\r\n            }, 3000)\r\n            dispatch(setStatusAC('failed'))\r\n        })\r\n}\r\n\r\n//type\r\nexport type RegistrationActionsType = RegistrationType\r\nexport type RegistrationType = ReturnType<typeof registrationAC>\r\n\r\n\r\n\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport style from '../../App.module.css';\r\nimport {registrationTC} from \"./regist-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootState, TypeDispatch} from \"../../redux/store\";\r\nimport { Navigate } from 'react-router-dom';\r\nimport {isError} from \"../Login/login-reducer\";\r\nimport Logo from \"../../common/Logo\";\r\n\r\nfunction Registration() {\r\n\r\n    const dispatch = useDispatch<TypeDispatch>()\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [password1, setPassword1] = useState('')\r\n\r\n    const isLoggedIn = useSelector<AppRootState, boolean>(state => state.login.isLoggedIn)\r\n    const error = useSelector<AppRootState, string>(state => state.login.error)\r\n\r\n\r\n    const onChangeHandlerEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n    }\r\n\r\n    const onChangeHandlerPass = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value)\r\n    }\r\n    const onChangeHandlerPass1 = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword1(e.currentTarget.value)\r\n    }\r\n\r\nconst onClickHandler = () => {\r\n        if (password != password1){\r\n            dispatch(isError('Password is not correct'))\r\n        } else {\r\n            dispatch(registrationTC(email,password))\r\n        }\r\n\r\n}\r\n\r\n    return (\r\n        <div className={style.formBlock}>\r\n            <div className={style.titleFormBlock}>\r\n              <Logo/>\r\n                <h4>Registration</h4>\r\n            </div>\r\n            <div className={style.formBlockInput}>\r\n\r\n <input className={style.defaultInput} value={email} placeholder={'Email'} onChange={onChangeHandlerEmail}  />\r\n\r\n\r\n    <input className={style.defaultInput} value={password} placeholder={'Password'} onChange={onChangeHandlerPass}   />\r\n\r\n\r\n                <input className={style.defaultInput} placeholder={'Confirm password'} value={password1} onChange={onChangeHandlerPass1}   />\r\n\r\n    <div className={style.error}>{error ? error : ''}</div>\r\n\r\n    <button className={style.defaultButton} onClick={onClickHandler}>Register</button>\r\n            </div>\r\n            <div className={style.footerFormBlock}>\r\n\r\n            </div>\r\n            {isLoggedIn && <Navigate to={'/login'}/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Registration;\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../../api/cards-api\";\r\nimport {AppActionsType} from \"../../redux/store\";\r\nimport {setStatusAC} from \"../../app/app-reducer\";\r\nimport {isError} from \"../Login/login-reducer\";\r\n\r\nconst initialState = {\r\n isSendPassword: false\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\n\r\nexport const resetReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'CREATE-NEW-PASSWORD':\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n// actions\r\nexport const createNewPasswordAC = (isSendPassword: boolean) => ({\r\n    type:  \"CREATE-NEW-PASSWORD\",\r\n    payload: {isSendPassword} }as const)\r\n\r\n// thunk\r\n\r\nexport const createNewPasswordTC = (password: string, token: string) => (dispatch: Dispatch<AppActionsType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    authAPI.createNewPassword(password, token)\r\n        .then(res => {\r\n            dispatch(createNewPasswordAC(true))\r\n            dispatch(setStatusAC('succeeded'))\r\n            console.log(res.data)\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ? err.response.data.error\r\n                : (err.message + ', more details in the console');\r\n            dispatch(isError(error))\r\n            setTimeout(() => {\r\n                dispatch(isError(''))\r\n            }, 3000)\r\n            dispatch(setStatusAC('failed'))\r\n\r\n        })\r\n}\r\n\r\n//type\r\n\r\nexport type NewPasswordActionTypes = CreateNewPasswordType\r\n export type CreateNewPasswordType = ReturnType<typeof createNewPasswordAC>","import React, {ChangeEvent, useState} from 'react';\r\nimport style from '../../App.module.css';\r\nimport {Navigate, useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {createNewPasswordTC} from \"./reset-reducer\";\r\nimport {AppRootState, TypeDispatch} from \"../../redux/store\";\r\nimport Logo from \"../../common/Logo\";\r\n\r\n\r\n\r\nfunction Reset() {\r\n\r\n    const [password, setPassword] = useState('')\r\n    const isSendPassword = useSelector<AppRootState, boolean>(state => state.reset.isSendPassword)\r\n        const dispatch = useDispatch<TypeDispatch>()\r\n\r\n    const onChangeHandlerPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value)\r\n    }\r\n\r\n    const {resetPasswordToken} = useParams<{resetPasswordToken:string}>()\r\n\r\n    const onClickHandler = () =>{\r\n        debugger\r\n        if (resetPasswordToken){\r\n            dispatch(createNewPasswordTC(password,resetPasswordToken))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.formBlock}>\r\n            <div className={style.titleFormBlock}>\r\n                <Logo />\r\n                <h5>Create new password</h5>\r\n            </div>\r\n            <div className={style.formBlockInput}>\r\n                <input className={style.defaultInput} placeholder={'New password'} value={password} onChange={onChangeHandlerPassword}  />\r\n\r\n                <p>Create new password and we will send you further instructions to email </p>\r\n\r\n                <button className={style.defaultButton} onClick={onClickHandler}>Create new password</button></div>\r\n            {isSendPassword && (<Navigate to={'/login'}/>)}\r\n\r\n            <div className={style.footerFormBlock}>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Reset;\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport image404 from '../assets/404.png'\r\nimport style from './Error404.module.css'\r\n\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <div className={style.image}><img src={image404}\r\n                                          alt=\"cat\"/></div>\r\n            <div className={style.errorText}>Oops, This page does not exist</div>\r\n            <button>  <NavLink to={'/profile'} className={style.back}>go to homepage</NavLink></button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error404;","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../../api/cards-api\";\r\nimport {isError} from \"../Login/login-reducer\";\r\nimport {setStatusAC} from \"../../app/app-reducer\";\r\nimport {AppActionsType} from \"../../redux/store\";\r\n\r\nconst initialState = {\r\n    email:'',\r\n    isSendInstruction: false\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const forgotPasswordReducer = (state: InitialStateType = initialState, action:AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'FORGOT-PASSWORD':\r\n            return {...state, ... action.payload}\r\n        case 'IS-SEND-INSTRUCTION':\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n// actions\r\n\r\nexport const forgotPasswordAC = (email: string) => ({\r\n    type: 'FORGOT-PASSWORD',\r\n    payload: {email} } as const)\r\n\r\nexport const isSendInstructionAC = (isSendInstruction: boolean) => ({\r\n    type: 'IS-SEND-INSTRUCTION',\r\n    payload: {isSendInstruction} } as const)\r\n\r\n// thunk\r\n\r\nexport const forgotPasswordTC = (email: string) => ( dispatch: Dispatch<AppActionsType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    authAPI.forgotPassword(email)\r\n        .then(res => {\r\n            dispatch(isSendInstructionAC(true))\r\n            dispatch(setStatusAC('succeeded'))\r\n            console.log(res.data)\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ? err.response.data.error\r\n                : (err.message + ', more details in the console');\r\n            dispatch(isError(error))\r\n            setTimeout(() => {\r\n                dispatch(isError(''))\r\n            }, 3000)\r\n            dispatch(setStatusAC('failed'))\r\n\r\n        })\r\n}\r\n\r\n//type\r\nexport type ForgotPasswordActionsType = ForgotPasswordType | IsSendInstructionType\r\n\r\nexport type ForgotPasswordType = ReturnType<typeof forgotPasswordAC>\r\nexport type IsSendInstructionType = ReturnType<typeof isSendInstructionAC>","import React, {ChangeEvent, useState} from 'react';\r\nimport style from '../../App.module.css';\r\nimport {Link, Navigate} from \"react-router-dom\";\r\nimport {forgotPasswordTC} from \"./forgotPassword-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootState, TypeDispatch} from \"../../redux/store\";\r\nimport logoEmail from \"../../common/assets/4698238.png\";\r\nimport Logo from \"../../common/Logo\";\r\n\r\n\r\nfunction ForgotPassword() {\r\n\r\n    const [email, setEmail] = useState('')\r\n\r\n    const isSendInstructionAC = useSelector<AppRootState, boolean>(state => state.forgot.isSendInstruction)\r\n    const isError = useSelector<AppRootState, string>(state => state.login.error)\r\n\r\n    const dispatch = useDispatch<TypeDispatch>()\r\n\r\n    const onChangeHandlerEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n    }\r\n    const onClickHandler = () => {\r\n        dispatch(forgotPasswordTC(email))\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {isSendInstructionAC ? <div className={style.formBlock}>\r\n                    <div className={style.titleFormBlock}>\r\n                        <Logo />\r\n                        <h4>Check Email</h4>\r\n                        <div><img className={style.checkEmail} src={logoEmail} alt={'email'}/></div>\r\n                    </div>\r\n\r\n                    <div className={style.footerFormBlock}>\r\n                        <div>We’ve sent an Email with instructions to {email}</div>\r\n                    </div>\r\n                </div>\r\n                : <div className={style.formBlock}>\r\n                    <div className={style.titleFormBlock}>\r\n                       <Logo />\r\n                        <h4>Forgot your password?</h4>\r\n                    </div>\r\n                    <div className={style.formBlockInput}>\r\n                        <input className={style.defaultInput} placeholder={'Email'} value={email} onChange={onChangeHandlerEmail}/>\r\n\r\n                        <p>Enter your email address and we will send you further instructions</p>\r\n                        <div className={style.error}>{isError}</div>\r\n                        <button className={style.defaultButton} onClick={onClickHandler}>Send instruction</button>\r\n                    </div>\r\n                    {isSendInstructionAC && (<Navigate to={'/check'}/>)}\r\n\r\n                    <div className={style.footerFormBlock}>\r\n                        <p>Did you remember your password?</p>\r\n                        <p><Link to={\"/login\"}> Try logging in</Link></p>\r\n                    </div>\r\n                </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ForgotPassword;\r\n\r\n","import {Navigate, Route, Routes} from \"react-router-dom\";\r\nimport Profile from \"../../features/Profile/Profile\";\r\nimport Login from \"../../features/Login/Login\";\r\nimport Registration from \"../../features/Registration/Registration\";\r\nimport Reset from \"../../features/ResetPassword/Reset\";\r\nimport Error404 from \"../../common/Error404/Page404\";\r\nimport React from \"react\";\r\nimport ForgotPassword from \"../../features/ForgotPassword/ForgotPassword\";\r\n\r\n\r\nexport const AllRoutes = () => {\r\n    return (\r\n    <Routes>\r\n        <Route path=\"/\" element={<Profile />}/>\r\n        <Route path=\"login\" element={<Login/>}/>\r\n        <Route path=\"profile\" element={<Profile/>}/>\r\n        <Route path=\"registration\" element={<Registration/>}/>\r\n        <Route path=\"forgot\" element={<ForgotPassword />}/>\r\n        <Route path=\"reset/:resetPasswordToken\" element={<Reset />}/>\r\n        <Route path=\"404\" element={<Error404/>}/>\r\n        <Route path=\"*\" element={<Navigate to=\"/404\"/>}/>\r\n    </Routes>)\r\n}\r\n\r\n","import React, {useEffect} from 'react';\r\nimport style from './App.module.css';\r\nimport Header from \"./common/Header/Header\";\r\nimport {initializeAppTC} from \"./app/app-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootState} from \"./redux/store\";\r\nimport Preloader from \"./common/Preloader/Preloader\";\r\nimport {AllRoutes} from \"./app/Routes/AllRoutes\";\r\n\r\nfunction App() {\r\n\r\n    const dispatch = useDispatch()\r\n    const isInitialized = useSelector<AppRootState, boolean>( state => state.app.isInitialized)\r\n\r\n\r\n    useEffect(()=>{\r\n        dispatch<any>(initializeAppTC())\r\n    },[])\r\n\r\n   /* if (!isInitialized){\r\n        return <Preloader/>\r\n    }*/\r\n\r\n    return (\r\n        <div className={style.mainBlock}>\r\n            {!isInitialized && <Preloader/>}\r\n            <Header/>\r\n                <AllRoutes />\r\n                <footer className={style.footerBlock}>\r\n                @2022 cards training project\r\n                </footer>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk, { ThunkAction, ThunkDispatch } from \"redux-thunk\";\r\nimport {appReducer, AppReducerActionType} from \"../app/app-reducer\";\r\nimport {LoginActionsType, loginReducer} from \"../features/Login/login-reducer\";\r\nimport {ProfileActionTypes, profileReducer} from \"../features/Profile/profile-reducer\";\r\nimport {NewPasswordActionTypes, resetReducer} from \"../features/ResetPassword/reset-reducer\";\r\nimport {ForgotPasswordActionsType, forgotPasswordReducer} from \"../features/ForgotPassword/forgotPassword-reducer\";\r\nimport {RegistrationActionsType} from \"../features/Registration/regist-reducer\";\r\n\r\n// объединяя reducer-ы с помощью combineReducers,\r\n// мы задаём структуру нашего единственного объекта-состояния\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    login:loginReducer,\r\n    profile: profileReducer,\r\n    reset: resetReducer,\r\n    forgot: forgotPasswordReducer\r\n})\r\n// определить автоматически тип всего объекта состояния\r\nexport type AppRootState = ReturnType<typeof rootReducer>\r\n// Типизация экшн для всего апп\r\nexport type AppActionsType = LoginActionsType | ProfileActionTypes | AppReducerActionType | ForgotPasswordActionsType | RegistrationActionsType | NewPasswordActionTypes\r\n\r\nexport type TypeDispatch = ThunkDispatch<AppRootState, any, AppActionsType>;\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType, AppRootState, unknown, AppActionsType>\r\n\r\n\r\n// непосредственно создаём store\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./redux/store\";\r\nimport { HashRouter} from \"react-router-dom\";\r\n\r\nconst root = ReactDOM.createRoot(\r\n    document.getElementById('root') as HTMLElement\r\n);\r\nroot.render(\r\n    <HashRouter>\r\n        <Provider store={store}>\r\n\r\n                <App/>\r\n\r\n        </Provider>\r\n    </HashRouter>\r\n)\r\n;\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}